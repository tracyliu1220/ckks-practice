#include <gmp.h>
#include <gmpxx.h>

mpf_class bignum_PI =  mpf_class("3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989", 3000);

mpf_class bignum_sin(mpf_class x) {
    // sin(x) = x - x^3 / 3! + x^5 / 5! - x^7 / 7! + ...

    // x
    mpf_class ret = x;
    mpf_class cur = x;

    // 3...
    for (int i = 3; i <= 100; i += 2) {
        cur = cur * x * x / (i * (i - 1));
        if (i % 4 == 3) {
            ret -= cur;
        } else {
            ret += cur;
        }
    }

    return ret;
}

mpf_class bignum_cos(mpf_class x) {
    // cos(x) = 1 - x^2 / 2! + x^4 / 4! - x^6 / 6! + ...

    // x
    mpf_class ret = mpf_class(1, x.get_prec());
    mpf_class cur = ret;

    // 3...
    for (int i = 2; i <= 100; i += 2) {
        cur = cur * x * x / (i * (i - 1));
        if (i % 4 == 2) {
            ret -= cur;
        } else {
            ret += cur;
        }
    }

    return ret;
}
